//Маслов К.Д. 9309

DM_P DM_P::GCF_PP_P(DM_P pSecond) //НОД многочленов
{
	DM_P pG, pN;
	pG.c = new DM_Q[m];											
	pN.c = new DM_Q[m];
	pG.c = c;
	pG.m = m;															
	pG = pG % pSecond;	//вычисляем остаток деления входных многочленов
	pN = pSecond % pG;	//вычисляем остаток деления меньшего входного многочлена на результат работы прошлой строки
	while (pG.LED_P_Z != 0 && pN.LED_P_Z != 0)	//выполняем алгоритм Евклида для многочленов, пока вспомогательные многочлены не равны нулю
	{
		if (pG.DEG_P_N() > pN.DEG_P_N())
			pG = pG % pN;
		else
			pN = pN % pG;
	}
	if (pG.LED_P_Z == 0)	//возврат последнего ненулевого остатка
		return pN;
	else
		return pG;
}
