#include <iostream>
#include <math.h>
using namespace std;

int n, n1, n2;

void TRANS_Z_N() //Преобразование целого неотрицательного в натуральное
{
	int n;
	cout << "Введите целое неотрицательное число" << endl;
	cin >> n;
	if (n <= 0) cout << "Число " << n << " не является натуральным";	//проверка на натуральность числа
	else cout << "Результат: " << n;
}

void ADD_ZZ_Z() //Сложение двух целых чисел
{
	int n, n1, n2;
	cout << "Введите два целых числа" <<endl;
	cin >> n1;
	cin >> n2; 
	n = n1 + n2;
	cout << "Результат: " << n;
}

void SUB_ZZ_Z() //Вычитание двух целых чисел
{
	int n, n1, n2;
	cout << "Введите два целых числа" << endl;
	cin >> n1;
	cin >> n2;
	n = n1 - n2;
	cout << "Результат: " << n;
}

void MUL_ZZ_Z() //Умножение двух целых чисел
{
	int n, n1, n2;
	cout << "Введите два целых числа" << endl;
	cin >> n1;
	cin >> n2;
	n = n1 * n2;
	cout << "Результат: " << n;
}

void DIV_ZZ_Z() //Частное от деления большего целого числа на меньшее или равное натуральное с остатком(делитель отличен от нуля)
{

}

void MOD_ZZ_Z() //Остаток от деления большего целого числа на меньшее или равное натуральное с остатком(делитель отличен от нуля)
{

}

void RED_Q_Q() //Сокращение дроби
{

}

void INT_Q_B() //Проверка на целое, если рациональное число является целым, то «да», иначе «нет»
{

}

void TRANS_Z_Q() //Преобразование целого в дробное
{

}

int main()
{
	int ccc;
	setlocale(LC_ALL, "Russian");
	cout << "1)Преобразование целого неотрицательного в натуральное \n2)Сложение целых чисел \n3)Вычитание целых чисел \n4)Умножение целых чисел \n5)Частное от деления большего целого числа на меньшее или равное натуральное с остатком(делитель отличен от нуля) \n6)Остаток от деления большего целого числа на меньшее или равное натуральное с остатком(делитель отличен от нуля) \n7)Сокращение дроби \n8)Проверка на целое, если рациональное число является целым, то «да», иначе «нет» \n9)Преобразование целого в дробное" << endl;
	cin >> ccc;
switch (ccc)
{
case 1:
	TRANS_Z_N();
	break;
case 2:
	ADD_ZZ_Z();
	break;
case 3:
	SUB_ZZ_Z();
	break;
case 4:
	MUL_ZZ_Z();
	break;
case 5:
	DIV_ZZ_Z();
	break;
case 6:
	MOD_ZZ_Z();
	break;
case 7:
	RED_Q_Q();
	break;
case 8:
	INT_Q_B();
	break;
case 9:
	TRANS_Z_Q();
	break;
}
cout << endl << "Работа программы завершена";
}

